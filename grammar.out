State 0:
          code ::= * statementblock
      (1) statementblock ::= *
          statementblock ::= * statementblock statement

                          code accept
                statementblock shift        16     
                     {default} reduce       1      statementblock ::=

State 1:
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * NOT ex
          ex ::= * MAXIMUM ex
          ex ::= * MINIMUM ex
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AND ex
          ex ::= * ex OR ex
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * NUL_
          ex ::= * jsonarray
          jsonarray ::= * LSPAR RSPAR
          jsonarray ::= LSPAR * RSPAR
          jsonarray ::= * LSPAR exlist RSPAR
          jsonarray ::= LSPAR * exlist RSPAR
          exlist ::= * ex
          exlist ::= * exlist COMMA ex

                    IDENTIFIER shift-reduce 8      ex ::= IDENTIFIER
                          LPAR shift        13     
                      NUMTOKEN shift-reduce 6      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 7      ex ::= STRTOKEN
                           NOT shift        11     
                       MAXIMUM shift        9      
                       MINIMUM shift        7      
                          TRUE shift-reduce 19     ex ::= TRUE
                         FALSE shift-reduce 20     ex ::= FALSE
                          NUL_ shift-reduce 21     ex ::= NUL_
                         LSPAR shift        1      
                         RSPAR shift-reduce 23     jsonarray ::= LSPAR RSPAR
                            ex shift        21     
                     jsonarray shift-reduce 22     ex ::= jsonarray
                        exlist shift        32     

State 2:
          statement ::= IDENTIFIER ASSIGN * ex SEMICOLON
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * NOT ex
          ex ::= * MAXIMUM ex
          ex ::= * MINIMUM ex
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AND ex
          ex ::= * ex OR ex
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * NUL_
          ex ::= * jsonarray
          jsonarray ::= * LSPAR RSPAR
          jsonarray ::= * LSPAR exlist RSPAR

                    IDENTIFIER shift-reduce 8      ex ::= IDENTIFIER
                          LPAR shift        13     
                      NUMTOKEN shift-reduce 6      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 7      ex ::= STRTOKEN
                           NOT shift        11     
                       MAXIMUM shift        9      
                       MINIMUM shift        7      
                          TRUE shift-reduce 19     ex ::= TRUE
                         FALSE shift-reduce 20     ex ::= FALSE
                          NUL_ shift-reduce 21     ex ::= NUL_
                         LSPAR shift        1      
                            ex shift        17     
                     jsonarray shift-reduce 22     ex ::= jsonarray

State 3:
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * NOT ex
          ex ::= * MAXIMUM ex
          ex ::= * MINIMUM ex
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AND ex
          ex ::= * ex OR ex
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * NUL_
          ex ::= * jsonarray
          jsonarray ::= * LSPAR RSPAR
          jsonarray ::= * LSPAR exlist RSPAR
          exlist ::= exlist COMMA * ex

                    IDENTIFIER shift-reduce 8      ex ::= IDENTIFIER
                          LPAR shift        13     
                      NUMTOKEN shift-reduce 6      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 7      ex ::= STRTOKEN
                           NOT shift        11     
                       MAXIMUM shift        9      
                       MINIMUM shift        7      
                          TRUE shift-reduce 19     ex ::= TRUE
                         FALSE shift-reduce 20     ex ::= FALSE
                          NUL_ shift-reduce 21     ex ::= NUL_
                         LSPAR shift        1      
                            ex shift        20     
                     jsonarray shift-reduce 22     ex ::= jsonarray

State 4:
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * NOT ex
          ex ::= * MAXIMUM ex
          ex ::= * MINIMUM ex
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AND ex
          ex ::= * ex OR ex
          ex ::= ex OR * ex
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * NUL_
          ex ::= * jsonarray
          jsonarray ::= * LSPAR RSPAR
          jsonarray ::= * LSPAR exlist RSPAR

                    IDENTIFIER shift-reduce 8      ex ::= IDENTIFIER
                          LPAR shift        13     
                      NUMTOKEN shift-reduce 6      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 7      ex ::= STRTOKEN
                           NOT shift        11     
                       MAXIMUM shift        9      
                       MINIMUM shift        7      
                          TRUE shift-reduce 19     ex ::= TRUE
                         FALSE shift-reduce 20     ex ::= FALSE
                          NUL_ shift-reduce 21     ex ::= NUL_
                         LSPAR shift        1      
                            ex shift        22     
                     jsonarray shift-reduce 22     ex ::= jsonarray

State 5:
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * NOT ex
          ex ::= * MAXIMUM ex
          ex ::= * MINIMUM ex
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AND ex
          ex ::= ex AND * ex
          ex ::= * ex OR ex
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * NUL_
          ex ::= * jsonarray
          jsonarray ::= * LSPAR RSPAR
          jsonarray ::= * LSPAR exlist RSPAR

                    IDENTIFIER shift-reduce 8      ex ::= IDENTIFIER
                          LPAR shift        13     
                      NUMTOKEN shift-reduce 6      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 7      ex ::= STRTOKEN
                           NOT shift        11     
                       MAXIMUM shift        9      
                       MINIMUM shift        7      
                          TRUE shift-reduce 19     ex ::= TRUE
                         FALSE shift-reduce 20     ex ::= FALSE
                          NUL_ shift-reduce 21     ex ::= NUL_
                         LSPAR shift        1      
                            ex shift        23     
                     jsonarray shift-reduce 22     ex ::= jsonarray

State 6:
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * NOT ex
          ex ::= * MAXIMUM ex
          ex ::= * MINIMUM ex
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= ex POWER * ex
          ex ::= * ex AND ex
          ex ::= * ex OR ex
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * NUL_
          ex ::= * jsonarray
          jsonarray ::= * LSPAR RSPAR
          jsonarray ::= * LSPAR exlist RSPAR

                    IDENTIFIER shift-reduce 8      ex ::= IDENTIFIER
                          LPAR shift        13     
                      NUMTOKEN shift-reduce 6      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 7      ex ::= STRTOKEN
                           NOT shift        11     
                       MAXIMUM shift        9      
                       MINIMUM shift        7      
                          TRUE shift-reduce 19     ex ::= TRUE
                         FALSE shift-reduce 20     ex ::= FALSE
                          NUL_ shift-reduce 21     ex ::= NUL_
                         LSPAR shift        1      
                            ex shift        31     
                     jsonarray shift-reduce 22     ex ::= jsonarray

State 7:
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * NOT ex
          ex ::= * MAXIMUM ex
          ex ::= * MINIMUM ex
          ex ::= MINIMUM * ex
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AND ex
          ex ::= * ex OR ex
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * NUL_
          ex ::= * jsonarray
          jsonarray ::= * LSPAR RSPAR
          jsonarray ::= * LSPAR exlist RSPAR

                    IDENTIFIER shift-reduce 8      ex ::= IDENTIFIER
                          LPAR shift        13     
                      NUMTOKEN shift-reduce 6      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 7      ex ::= STRTOKEN
                           NOT shift        11     
                       MAXIMUM shift        9      
                       MINIMUM shift        7      
                          TRUE shift-reduce 19     ex ::= TRUE
                         FALSE shift-reduce 20     ex ::= FALSE
                          NUL_ shift-reduce 21     ex ::= NUL_
                         LSPAR shift        1      
                            ex shift        24     
                     jsonarray shift-reduce 22     ex ::= jsonarray

State 8:
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * NOT ex
          ex ::= * MAXIMUM ex
          ex ::= * MINIMUM ex
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= ex DIVIDE * ex
          ex ::= * ex POWER ex
          ex ::= * ex AND ex
          ex ::= * ex OR ex
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * NUL_
          ex ::= * jsonarray
          jsonarray ::= * LSPAR RSPAR
          jsonarray ::= * LSPAR exlist RSPAR

                    IDENTIFIER shift-reduce 8      ex ::= IDENTIFIER
                          LPAR shift        13     
                      NUMTOKEN shift-reduce 6      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 7      ex ::= STRTOKEN
                           NOT shift        11     
                       MAXIMUM shift        9      
                       MINIMUM shift        7      
                          TRUE shift-reduce 19     ex ::= TRUE
                         FALSE shift-reduce 20     ex ::= FALSE
                          NUL_ shift-reduce 21     ex ::= NUL_
                         LSPAR shift        1      
                            ex shift        30     
                     jsonarray shift-reduce 22     ex ::= jsonarray

State 9:
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * NOT ex
          ex ::= * MAXIMUM ex
          ex ::= MAXIMUM * ex
          ex ::= * MINIMUM ex
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AND ex
          ex ::= * ex OR ex
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * NUL_
          ex ::= * jsonarray
          jsonarray ::= * LSPAR RSPAR
          jsonarray ::= * LSPAR exlist RSPAR

                    IDENTIFIER shift-reduce 8      ex ::= IDENTIFIER
                          LPAR shift        13     
                      NUMTOKEN shift-reduce 6      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 7      ex ::= STRTOKEN
                           NOT shift        11     
                       MAXIMUM shift        9      
                       MINIMUM shift        7      
                          TRUE shift-reduce 19     ex ::= TRUE
                         FALSE shift-reduce 20     ex ::= FALSE
                          NUL_ shift-reduce 21     ex ::= NUL_
                         LSPAR shift        1      
                            ex shift        25     
                     jsonarray shift-reduce 22     ex ::= jsonarray

State 10:
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * NOT ex
          ex ::= * MAXIMUM ex
          ex ::= * MINIMUM ex
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= ex TIMES * ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AND ex
          ex ::= * ex OR ex
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * NUL_
          ex ::= * jsonarray
          jsonarray ::= * LSPAR RSPAR
          jsonarray ::= * LSPAR exlist RSPAR

                    IDENTIFIER shift-reduce 8      ex ::= IDENTIFIER
                          LPAR shift        13     
                      NUMTOKEN shift-reduce 6      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 7      ex ::= STRTOKEN
                           NOT shift        11     
                       MAXIMUM shift        9      
                       MINIMUM shift        7      
                          TRUE shift-reduce 19     ex ::= TRUE
                         FALSE shift-reduce 20     ex ::= FALSE
                          NUL_ shift-reduce 21     ex ::= NUL_
                         LSPAR shift        1      
                            ex shift        29     
                     jsonarray shift-reduce 22     ex ::= jsonarray

State 11:
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * NOT ex
          ex ::= NOT * ex
          ex ::= * MAXIMUM ex
          ex ::= * MINIMUM ex
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AND ex
          ex ::= * ex OR ex
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * NUL_
          ex ::= * jsonarray
          jsonarray ::= * LSPAR RSPAR
          jsonarray ::= * LSPAR exlist RSPAR

                    IDENTIFIER shift-reduce 8      ex ::= IDENTIFIER
                          LPAR shift        13     
                      NUMTOKEN shift-reduce 6      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 7      ex ::= STRTOKEN
                           NOT shift        11     
                       MAXIMUM shift        9      
                       MINIMUM shift        7      
                          TRUE shift-reduce 19     ex ::= TRUE
                         FALSE shift-reduce 20     ex ::= FALSE
                          NUL_ shift-reduce 21     ex ::= NUL_
                         LSPAR shift        1      
                            ex shift        26     
                     jsonarray shift-reduce 22     ex ::= jsonarray

State 12:
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * NOT ex
          ex ::= * MAXIMUM ex
          ex ::= * MINIMUM ex
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= ex MINUS * ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AND ex
          ex ::= * ex OR ex
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * NUL_
          ex ::= * jsonarray
          jsonarray ::= * LSPAR RSPAR
          jsonarray ::= * LSPAR exlist RSPAR

                    IDENTIFIER shift-reduce 8      ex ::= IDENTIFIER
                          LPAR shift        13     
                      NUMTOKEN shift-reduce 6      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 7      ex ::= STRTOKEN
                           NOT shift        11     
                       MAXIMUM shift        9      
                       MINIMUM shift        7      
                          TRUE shift-reduce 19     ex ::= TRUE
                         FALSE shift-reduce 20     ex ::= FALSE
                          NUL_ shift-reduce 21     ex ::= NUL_
                         LSPAR shift        1      
                            ex shift        28     
                     jsonarray shift-reduce 22     ex ::= jsonarray

State 13:
          ex ::= * LPAR ex RPAR
          ex ::= LPAR * ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * NOT ex
          ex ::= * MAXIMUM ex
          ex ::= * MINIMUM ex
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AND ex
          ex ::= * ex OR ex
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * NUL_
          ex ::= * jsonarray
          jsonarray ::= * LSPAR RSPAR
          jsonarray ::= * LSPAR exlist RSPAR

                    IDENTIFIER shift-reduce 8      ex ::= IDENTIFIER
                          LPAR shift        13     
                      NUMTOKEN shift-reduce 6      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 7      ex ::= STRTOKEN
                           NOT shift        11     
                       MAXIMUM shift        9      
                       MINIMUM shift        7      
                          TRUE shift-reduce 19     ex ::= TRUE
                         FALSE shift-reduce 20     ex ::= FALSE
                          NUL_ shift-reduce 21     ex ::= NUL_
                         LSPAR shift        1      
                            ex shift        18     
                     jsonarray shift-reduce 22     ex ::= jsonarray

State 14:
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * NOT ex
          ex ::= * MAXIMUM ex
          ex ::= * MINIMUM ex
          ex ::= * ex PLUS ex
          ex ::= ex PLUS * ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AND ex
          ex ::= * ex OR ex
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * NUL_
          ex ::= * jsonarray
          jsonarray ::= * LSPAR RSPAR
          jsonarray ::= * LSPAR exlist RSPAR

                    IDENTIFIER shift-reduce 8      ex ::= IDENTIFIER
                          LPAR shift        13     
                      NUMTOKEN shift-reduce 6      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 7      ex ::= STRTOKEN
                           NOT shift        11     
                       MAXIMUM shift        9      
                       MINIMUM shift        7      
                          TRUE shift-reduce 19     ex ::= TRUE
                         FALSE shift-reduce 20     ex ::= FALSE
                          NUL_ shift-reduce 21     ex ::= NUL_
                         LSPAR shift        1      
                            ex shift        27     
                     jsonarray shift-reduce 22     ex ::= jsonarray

State 15:
          statement ::= WRITE * ex SEMICOLON
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * NOT ex
          ex ::= * MAXIMUM ex
          ex ::= * MINIMUM ex
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AND ex
          ex ::= * ex OR ex
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * NUL_
          ex ::= * jsonarray
          jsonarray ::= * LSPAR RSPAR
          jsonarray ::= * LSPAR exlist RSPAR

                    IDENTIFIER shift-reduce 8      ex ::= IDENTIFIER
                          LPAR shift        13     
                      NUMTOKEN shift-reduce 6      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 7      ex ::= STRTOKEN
                           NOT shift        11     
                       MAXIMUM shift        9      
                       MINIMUM shift        7      
                          TRUE shift-reduce 19     ex ::= TRUE
                         FALSE shift-reduce 20     ex ::= FALSE
                          NUL_ shift-reduce 21     ex ::= NUL_
                         LSPAR shift        1      
                            ex shift        19     
                     jsonarray shift-reduce 22     ex ::= jsonarray

State 16:
      (0) code ::= statementblock *
          statementblock ::= statementblock * statement
          statement ::= * WRITE ex SEMICOLON
          statement ::= * IDENTIFIER ASSIGN ex SEMICOLON

                             $ reduce       0      code ::= statementblock
                         WRITE shift        15     
                    IDENTIFIER shift        33     
                     statement shift-reduce 2      statementblock ::= statementblock statement

State 17:
          statement ::= IDENTIFIER ASSIGN ex * SEMICOLON
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AND ex
          ex ::= ex * OR ex

                          PLUS shift        14     
                         MINUS shift        12     
                         TIMES shift        10     
                        DIVIDE shift        8      
                         POWER shift        6      
                     SEMICOLON shift-reduce 4      statement ::= IDENTIFIER ASSIGN ex SEMICOLON
                           AND shift        5      
                            OR shift        4      

State 18:
          ex ::= LPAR ex * RPAR
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AND ex
          ex ::= ex * OR ex

                          PLUS shift        14     
                         MINUS shift        12     
                         TIMES shift        10     
                        DIVIDE shift        8      
                         POWER shift        6      
                          RPAR shift-reduce 5      ex ::= LPAR ex RPAR
                           AND shift        5      
                            OR shift        4      

State 19:
          statement ::= WRITE ex * SEMICOLON
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AND ex
          ex ::= ex * OR ex

                          PLUS shift        14     
                         MINUS shift        12     
                         TIMES shift        10     
                        DIVIDE shift        8      
                         POWER shift        6      
                     SEMICOLON shift-reduce 3      statement ::= WRITE ex SEMICOLON
                           AND shift        5      
                            OR shift        4      

State 20:
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AND ex
          ex ::= ex * OR ex
     (26) exlist ::= exlist COMMA ex *

                          PLUS shift        14     
                         MINUS shift        12     
                         TIMES shift        10     
                        DIVIDE shift        8      
                         POWER shift        6      
                           AND shift        5      
                            OR shift        4      
                     {default} reduce       26     exlist ::= exlist COMMA ex

State 21:
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AND ex
          ex ::= ex * OR ex
     (25) exlist ::= ex *

                          PLUS shift        14     
                         MINUS shift        12     
                         TIMES shift        10     
                        DIVIDE shift        8      
                         POWER shift        6      
                           AND shift        5      
                            OR shift        4      
                     {default} reduce       25     exlist ::= ex

State 22:
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AND ex
          ex ::= ex * OR ex
     (18) ex ::= ex OR ex *

                          PLUS shift        14     
                          PLUS reduce       18      ** Parsing conflict **
                         MINUS shift        12     
                         MINUS reduce       18      ** Parsing conflict **
                         TIMES shift        10     
                         TIMES reduce       18      ** Parsing conflict **
                        DIVIDE shift        8      
                        DIVIDE reduce       18      ** Parsing conflict **
                         POWER shift        6      
                         POWER reduce       18      ** Parsing conflict **
                           AND shift        5      
                           AND reduce       18      ** Parsing conflict **
                            OR shift        4      
                            OR reduce       18      ** Parsing conflict **
                     {default} reduce       18     ex ::= ex OR ex

State 23:
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AND ex
     (17) ex ::= ex AND ex *
          ex ::= ex * OR ex

                          PLUS shift        14     
                          PLUS reduce       17      ** Parsing conflict **
                         MINUS shift        12     
                         MINUS reduce       17      ** Parsing conflict **
                         TIMES shift        10     
                         TIMES reduce       17      ** Parsing conflict **
                        DIVIDE shift        8      
                        DIVIDE reduce       17      ** Parsing conflict **
                         POWER shift        6      
                         POWER reduce       17      ** Parsing conflict **
                           AND shift        5      
                           AND reduce       17      ** Parsing conflict **
                            OR shift        4      
                            OR reduce       17      ** Parsing conflict **
                     {default} reduce       17     ex ::= ex AND ex

State 24:
     (11) ex ::= MINIMUM ex *
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AND ex
          ex ::= ex * OR ex

                          PLUS shift        14     
                          PLUS reduce       11      ** Parsing conflict **
                         MINUS shift        12     
                         MINUS reduce       11      ** Parsing conflict **
                         TIMES shift        10     
                         TIMES reduce       11      ** Parsing conflict **
                        DIVIDE shift        8      
                        DIVIDE reduce       11      ** Parsing conflict **
                         POWER shift        6      
                         POWER reduce       11      ** Parsing conflict **
                           AND shift        5      
                           AND reduce       11      ** Parsing conflict **
                            OR shift        4      
                            OR reduce       11      ** Parsing conflict **
                     {default} reduce       11     ex ::= MINIMUM ex

State 25:
     (10) ex ::= MAXIMUM ex *
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AND ex
          ex ::= ex * OR ex

                          PLUS shift        14     
                          PLUS reduce       10      ** Parsing conflict **
                         MINUS shift        12     
                         MINUS reduce       10      ** Parsing conflict **
                         TIMES shift        10     
                         TIMES reduce       10      ** Parsing conflict **
                        DIVIDE shift        8      
                        DIVIDE reduce       10      ** Parsing conflict **
                         POWER shift        6      
                         POWER reduce       10      ** Parsing conflict **
                           AND shift        5      
                           AND reduce       10      ** Parsing conflict **
                            OR shift        4      
                            OR reduce       10      ** Parsing conflict **
                     {default} reduce       10     ex ::= MAXIMUM ex

State 26:
      (9) ex ::= NOT ex *
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AND ex
          ex ::= ex * OR ex

                          PLUS shift        14     
                          PLUS reduce       9       ** Parsing conflict **
                         MINUS shift        12     
                         MINUS reduce       9       ** Parsing conflict **
                         TIMES shift        10     
                         TIMES reduce       9       ** Parsing conflict **
                        DIVIDE shift        8      
                        DIVIDE reduce       9       ** Parsing conflict **
                         POWER shift        6      
                         POWER reduce       9       ** Parsing conflict **
                           AND shift        5      
                           AND reduce       9       ** Parsing conflict **
                            OR shift        4      
                            OR reduce       9       ** Parsing conflict **
                     {default} reduce       9      ex ::= NOT ex

State 27:
          ex ::= ex * PLUS ex
     (12) ex ::= ex PLUS ex *
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AND ex
          ex ::= ex * OR ex

                         TIMES shift        10     
                        DIVIDE shift        8      
                         POWER shift        6      
                           AND shift        5      
                           AND reduce       12      ** Parsing conflict **
                            OR shift        4      
                            OR reduce       12      ** Parsing conflict **
                     {default} reduce       12     ex ::= ex PLUS ex

State 28:
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
     (13) ex ::= ex MINUS ex *
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AND ex
          ex ::= ex * OR ex

                         TIMES shift        10     
                        DIVIDE shift        8      
                         POWER shift        6      
                           AND shift        5      
                           AND reduce       13      ** Parsing conflict **
                            OR shift        4      
                            OR reduce       13      ** Parsing conflict **
                     {default} reduce       13     ex ::= ex MINUS ex

State 29:
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
     (14) ex ::= ex TIMES ex *
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AND ex
          ex ::= ex * OR ex

                         POWER shift        6      
                           AND shift        5      
                           AND reduce       14      ** Parsing conflict **
                            OR shift        4      
                            OR reduce       14      ** Parsing conflict **
                     {default} reduce       14     ex ::= ex TIMES ex

State 30:
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
     (15) ex ::= ex DIVIDE ex *
          ex ::= ex * POWER ex
          ex ::= ex * AND ex
          ex ::= ex * OR ex

                         POWER shift        6      
                           AND shift        5      
                           AND reduce       15      ** Parsing conflict **
                            OR shift        4      
                            OR reduce       15      ** Parsing conflict **
                     {default} reduce       15     ex ::= ex DIVIDE ex

State 31:
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
     (16) ex ::= ex POWER ex *
          ex ::= ex * AND ex
          ex ::= ex * OR ex

                         POWER shift        6      
                           AND shift        5      
                           AND reduce       16      ** Parsing conflict **
                            OR shift        4      
                            OR reduce       16      ** Parsing conflict **
                     {default} reduce       16     ex ::= ex POWER ex

State 32:
          jsonarray ::= LSPAR exlist * RSPAR
          exlist ::= exlist * COMMA ex

                         RSPAR shift-reduce 24     jsonarray ::= LSPAR exlist RSPAR
                         COMMA shift        3      

State 33:
          statement ::= IDENTIFIER * ASSIGN ex SEMICOLON

                        ASSIGN shift        2      

----------------------------------------------------
Symbols:
    0: $:
    1: PLUS
    2: MINUS
    3: TIMES
    4: DIVIDE
    5: POWER
    6: WRITE
    7: SEMICOLON
    8: IDENTIFIER
    9: ASSIGN
   10: LPAR
   11: RPAR
   12: NUMTOKEN
   13: STRTOKEN
   14: NOT
   15: MAXIMUM
   16: MINIMUM
   17: AND
   18: OR
   19: TRUE
   20: FALSE
   21: NUL_
   22: LSPAR
   23: RSPAR
   24: COMMA
   25: error:
   26: code: <lambda> WRITE IDENTIFIER
   27: statementblock: <lambda> WRITE IDENTIFIER
   28: statement: WRITE IDENTIFIER
   29: ex: IDENTIFIER LPAR NUMTOKEN STRTOKEN NOT MAXIMUM MINIMUM TRUE FALSE NUL_ LSPAR
   30: jsonarray: LSPAR
   31: exlist: IDENTIFIER LPAR NUMTOKEN STRTOKEN NOT MAXIMUM MINIMUM TRUE FALSE NUL_ LSPAR
